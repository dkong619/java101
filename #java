/*-------------------------------------------------------------------------
Vowwels
count the number of vowels, concatenate two strings, and trim the string
--------------------------------------------------------------------------*/
import java.util.Scanner;

class strings {

    void vowels(String sentence) {
        int vowels = 0;
        for (int i = 0; i < sentence.length(); i++) {
            char ch = sentence.charAt(i);
            if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') {
                vowels++;
            }
        }
        System.out.println("no of vowels: " + vowels);
    }

    void concate(String s1, String s2) {
        System.out.println("after concatenating: " + s1.concat(s2));
    }

    void trim(String s1) {
        System.out.println("after trimming: " + s1.trim());
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        strings str = new strings();
        
        System.out.println("enter a sentence to count the no of vowels: ");
        String s1 = sc.nextLine();
        str.vowels(s1);
        System.out.println("enter another string to concatenate and trim whitespaces: ");
        String s2 = sc.nextLine();
        str.concate(s1, s2);
        str.trim(s1); 
        sc.close();

    }
}



/*-------------------------------------------------------------------------
Anagram and Panagram
anagram and panagram sing methods
--------------------------------------------------------------------------*/

import java.util.*;

public class AnagAndPanag {
    void anagaram(String s1, String s2) {
        char[] ch1 = s1.toCharArray();
        char[] ch2 = s2.toCharArray();

        Arrays.sort(ch1);
        Arrays.sort(ch2);

        boolean output = Arrays.equals(ch1, ch2);

        if (output) {
            System.out.println("\ngiven string is an anagram");
        } else {
            System.out.println("\ngiven string is not an anagram");
        }
    }

    void panagram(String s){
        int flag=0;
        for(int i=97;i<=122;i++){
            for(int j=0;j<s.length();j++){
                if((char)i==s.charAt(j)){
                    flag +=1;
                    break;
                }
            }
        }
        if(flag ==26){
            System.out.println("\nthe given string is a panagram");
        }
        else{
            System.out.println("\nthe given string is not a panagram");
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        AnagAndPanag obj = new AnagAndPanag();
        char chr;
        do{
            System.out.println("enter your choice \n1.anagram \n2.panagram");
            int choice=sc.nextInt();
            switch(choice){
                case 1:
                System.out.println("enter two strings: ");
                String s1=sc.next();
                String s2=sc.next();
                obj.anagaram(s1, s2);
                break;

                case 2:
                System.out.println("enter a sentence: ");
                String s3=sc.next();
                obj.panagram(s3);
                break;
            }
            System.out.println("do you want to continue: \n 1.if yes enter 'y'");
            chr = sc.next().charAt(0);
        }
        while(chr == 'y' || chr =='Y');
        sc.close();   
}
}


/*-------------------------------------------------------------------------
MeanAndMedian.java 
calculates the mean, median, and taking commandl ine arguments 
--------------------------------------------------------------------------*/

import java.util.*;

public class MeanAndMedian {
    void mean(int arr[]) {
        int n1 = arr.length;
        int sum = 0;
        double mean = 0;
        for (int i = 0; i < n1; i++) {
            sum += arr[i];
        }
        mean = sum / n1;
        System.out.println("mean: " + mean);
    }

    void median(int arr[]) {
        double median = 0;
        int n2 = arr.length;
        Arrays.sort(arr);
        if (n2 % 2 == 0) {
            median = arr[n2 / 2];
        } else {
            median = (arr[(n2 - 1) / 2] + arr[n2 / 2]) / 2.0;
        }
        System.out.println("median: " + median);

    }
    public static void main(String[] args) {
        int arr[] = new int[5];
        System.out.println("enter the elements of the array: ");
        for (int i = 0; i < arr.length; i++) {
            arr[i] = Integer.parseInt(args[i]);
        }

        System.out.println("array: " + Arrays.toString(arr));
        MeanAndMedian obj = new MeanAndMedian();
        obj.mean(arr);
        obj.median(arr);
    }

}













/*-------------------------------------------------------------------------
Count Objects 
--------------------------------------------------------------------------*/
public class count {
    static int no_of_objects = 0;

    count(int a, int b) {
        int x = a + b;
        System.out.println("Sum: " + x);
        no_of_objects++;
    }

    public static void main(String[] args) {
        count c1 = new count(2, 3);
        count c2 = new count(3, 6);
        count c3 = new count(2, 4);
        count c4 = new count(2, 5);
        count c5 = new count(1, 12);
        System.out.println("total no of objects created: " + count.no_of_objects);
    }
}










/*-------------------------------------------------------------------------
Password 
--------------------------------------------------------------------------*/
import java.util.*;

public class password {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int min_length = 8, lowercase = 0, uppercase = 0, special = 0, digit = 0;

        System.out.println("enter password: ");
        String password = sc.nextLine();
        int length = password.length();

        if (length < min_length) {
            System.out.println("password is short");
        } else {
            for (int i = 0; i < length; i++) {
                char ch = password.charAt(i);
                if (Character.isUpperCase(ch)) {
                    uppercase = 1;
                }
                else if (Character.isLowerCase(ch)) {
                    lowercase = 1;
                }
                else if (ch == '@' || ch == '#' || ch == '$' || ch == '*') {
                    special = 1;
                }
                else{
                    digit = 1;
                }
            }
        }
        if (uppercase == 1 && lowercase == 1 && special == 1 && digit == 1) {
            System.out.println("password is strong");
        } else {
            System.out.println("password is weak");
        }
        sc.close();
    }
}

/*-------------------------------------------------------------------------
linear search using method overloading and multi-conditional flag
--------------------------------------------------------------------------*/

import java.util.*;
import java.util.Scanner;

public class linsearch {
    public static void main(String[] args) {
            Scanner sc = new Scanner(System.in);
                System.out.println("enter the size of array");
                int x=sc.nextInt();
    
                int[] a=new int[x];
                System.out.println("enter the element of the array");
                for(int i=0;i<x;i++){
                    a[i]=sc.nextInt();
                }
    
                System.out.println("the unsorted array: ");
                System.out.println(Arrays.toString(a));
    
                Arrays.sort(a);
    
                System.out.println("the sorted array: ");
                System.out.println(Arrays.toString(a));

                System.out.println("enter the search element: ");
                int n=sc.nextInt();
    
                boolean flag=true;
                linearSearch(a, n,flag);
                sc.close();
    }
        
        static void linearSearch(int[] a, int key){    
            for(int i=0;i<a.length;i++){    
                if(a[i] == key){    
                    System.out.println(i);
                }
            } 
            System.out.println(" ");       
        }
        static void linearSearch(int[] a, int key,boolean flag){
            System.out.println("After method overloading, element is found at index: ");
            while(flag==true){
                for(int i=0;i<a.length;i++){    
                    if(a[i] == key){    
                        int pos[]=new int[a.length];
                        for(int j=0;j<1;j++){
                            pos[j]=i;   
                            System.out.print(pos[j]+" "); 
                            flag=false; 
                        }      
                    }
                }
                 
            }         
        }
    
}




/*-------------------------------------------------------------------------
program to create an empolyee class with add_bonus method.
create this class in a package and call add_bonus on a array of 
empoloyee object
--------------------------------------------------------------------------*/

package mypackage;

public class bonus{
    public  void compsalary1(int sal){
        System.out.println("after the bonus the salary is ");
        int s=sal+5000;
        System.out.println(s);
    }
    public void bon(String[] name, int[] sal) {
        System.out.println("the salary of the emplyee after increment of bonus is  ");
        int[] upsal=new int[sal.length];
        for(int i=0;i<upsal.length;i++){
            upsal[i]=sal[i]+2000;
        }
        for(int i=0;i<sal.length;i++){
            System.out.println(name[i]+" = "+upsal[i]);
        }
    }
    public void selection1(int[] a){
        int n=a.length;int smaller=0;
        for (int i=0;i<n;i++){
            int ind=i;
            for(int j=i+1;j<n;j++){
                if(a[j]<a[ind]){
                    ind=j;
                }
            }
            smaller=a[ind];
            a[ind]=a[i];
            a[i]=smaller;
        }
    }
}



/*--------------------------------------------outside the package--------------------------------------------------*/
import java.util.Scanner;
import mypackage.*;

class salary {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.println("the employee name   ");
        String name=sc.next();
        System.out.println("the employee's salary  ");
        int sal=sc.nextInt();
        salary obj =new salary();
        obj.compsalary(name,sal);
        sc.close();
    }
    private void compsalary(String name,int sal) {
        bonus ss=new bonus();
        char chr;
        Scanner sc=new Scanner(System.in);
        System.out.println("do u want to give bonus? yes ; y or no: n    ");
        chr=sc.next().charAt(0);
        while(chr=='y'||chr=='Y'){
            ss.compsalary1(sal);
            break;
        }
        sc.close();
    }
}




/*-------------------------------------------------------------------------
#8: file name: salary2 
purpose: program to implement work package with a method bonus 5%
--------------------------------------------------------------------------*/
import java.util.Scanner;
import mypackage.*;

class salary2 {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.println("enter the number of employee's  ");
        int size=sc.nextInt();
        System.out.println("enter the employee's name   ");
        String[] name = new String[size];
        for(int i=0;i<size;i++){
            name[i]=sc.next();
        }
        System.out.println("enter their respective employee's salary   ");
        int[] sal = new int[size];
        for(int i=0;i<size;i++){
            sal[i]=sc.nextInt();
        }
        System.out.println("entered details of the emplyee is  ");
        for(int i=0;i<size;i++){
            System.out.println(name[i]+" = "+sal[i]);
        }
        bonus obc=new bonus();
        System.out.println("do u want to give bonus to the employees? yes ; y or no: n    ");
        char chr=sc.next().charAt(0);
        while(chr=='y'||chr=='Y'){
            obc.bon(name,sal);
            break;
        }
        sc.close();
        
    
    }
}










/*-------------------------------------------------------------------------
Methodoveridding 
the implementation superclass, 
selection sort
--------------------------------------------------------------------------*/

import java.util.*;

public class methodoveridding {
    public void sort(int arr[], int n) {
        n = arr.length;
        for (int i = 0; i < n - 1; i++) {
            int min = i;
            for (int j = i + 1; j < n; j++) {
                if (arr[j] < arr[min]) {
                    min = j;
                }
            }
            int temp = arr[i];
            arr[i] = arr[min];
            arr[min] = temp;
        }
    }

    void print(int arr[]) {
        System.out.println("print array");
    }
}

class override extends methodoveridding {

    public void sort(int arr[], int n) {
        super.sort(arr, arr.length);
    }

    void print(int arr[]) {
        for (int i = 0; i < arr.length; i++) {
        }
        System.out.println(Arrays.toString(arr));
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        override obj = new override();
        System.out.println("enter the size of the array: ");
        int n = sc.nextInt();
        int arr[] = new int[n];

        System.out.println("enter array elements: ");
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        System.out.println("before sorting: ");
        obj.print(arr);
        System.out.println("after sorting: ");
        obj.sort(arr, n);
        obj.print(arr);
        sc.close();

    }
}





/*-------------------------------------------------------------------------
Interfaces 
interface, implements bubble sort using multi-inheritance 
--------------------------------------------------------------------------*/
import java.util.Scanner;

interface main{
    void sort(int arr[]);
}
interface main2{
    void printarr(int arr[],int n);
}
class interfaces implements main,main2{
    public void sort(int arr[]){

        int n=arr.length;
        for(int i=0;i<n-1;i++)
        for(int j=0;j<n-1-i;j++)
        if(arr[j]>=arr[j+1]){
            int temp = arr[j];
            arr[j] = arr[j+1];
            arr[j+1]=temp;
        }
    }
    public void printarr(int arr[],int n){
        n=arr.length;
        for(int i=0;i<n;i++){
            System.out.print(arr[i]+" ");
        }
    

    }
public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    System.out.println("enter array size: ");
    int n=sc.nextInt();
    int arr[]=new int[n];
    System.out.println("enter array elements: ");
    for(int i=0;i<n;i++){
        arr[i]=sc.nextInt();
    }
    interfaces m=new interfaces();
    System.out.println("before sorting: ");
    m.printarr(arr, n);
    m.sort(arr);
    System.out.println("after sorting: ");
    m.printarr(arr, n);
    sc.close();
}
    
}








/*-------------------------------------------------------------------------
Thiskeyword 
program to implement this keyword in inheritance class
--------------------------------------------------------------------------*/
import java.util.Scanner;

class first {
    int n1, n2;
}
public class thiskeyword extends first{
    void gcd(int n1, int n2) {
        this.n1 = n1;
        this.n2 = n2;
        int gcd = 1;

        for (int i = 1; i <= n1 && i <= n2; i++) {
            if (n1 % i == 0 && n2 % i == 0) {
                gcd = i;
            }
        }
        System.out.println("the gcd is: " + gcd);
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("enter two numbers to find the gcd: ");
        int n1 = sc.nextInt();
        int n2 = sc.nextInt();
        thiskeyword obj = new thiskeyword();
        obj.gcd(n1, n2);
        sc.close();

    }
}










/*----------------------------------------------------------------------------
Exceptions.java 
purpose: program to throw an exception for;
(a)divide by 0
(b)file not found
--------------------------------------------------------------------------- */
import java.io.*;
import java.util.Scanner;  

class exceptions{
    public static void main(String[] args) {
        Scanner sc =new Scanner(System.in);
        System.out.println("enter two numbers: ");
        int a=sc.nextInt();
        int b=sc.nextInt();

        try {
            System.out.println(a / b);
        }
        catch (ArithmeticException e) {
            System.out.println("Divided by zero operation cannot possible");
        }
        FileReader fileReader;  
         try {  
                fileReader = new FileReader("Test.txt");   
                BufferedReader bufferReader = new BufferedReader(fileReader); 
                String fileData = null;     
                try {  
                    while ((fileData = bufferReader.readLine()) != null){  
                        System.out.println(fileData);  
                    }  
                } catch (IOException e) {   
                    e.printStackTrace();  
                }  
         } catch (FileNotFoundException e1) {  
            e1.printStackTrace();  
        }    
        
    }
}








/*-------------------------------------------------------------------------
Built in package
purpose: program to implement bubble sort using  built-in package
name: P A Loga Vinayagaa
date: 30/10/22
--------------------------------------------------------------------------*/
import java.util.Scanner;
import java.util.Arrays;

public class builtin {
    void sort(int a[], int n) {
        n = a.length;
        for (int i = 0; i < n - 1; i++) {
            for (int j = 0; j < n - i - 1; j++) {
                if (a[j] > a[j + 1]) {
                    int temp = a[j];
                    a[j] = a[j + 1];
                    a[j + 1] = temp;
                }
            }
        }
    }

    void print(int arr[]) {
        int n = arr.length;
        for (int i = 0; i < n; i++) {
        }
        System.out.println(Arrays.toString(arr));
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        builtin obj = new builtin();
        System.out.println("enter the size of the array: ");
        int n = sc.nextInt();
        int arr[] = new int[n];

        System.out.println("enter array elements: ");
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        System.out.println("before sorting: ");
        obj.print(arr);
        System.out.println("after sorting: ");
        obj.sort(arr, n);
        obj.print(arr);
        sc.close();
    }
}
































/*-------------------------------------------------------------------------
Userdefined.java 
selection sort using user-defined package
--------------------------------------------------------------------------*/
package mypackage;

import java.util.Arrays;

public class userdefined{
    public void sort(int arr[],int n){
        n=arr.length;
        for(int i=0;i<n-1;i++){
            int min=i;
            for(int j=i+1;j<n;j++){
                if(arr[j]<arr[min]){
                    min=j;
                }
            }
            int temp =arr[i];
            arr[i]=arr[min];
            arr[min]=temp;
        }
    }

    public void print(int arr[]){
        for(int i=0;i<arr.length;i++){

        }
        System.out.println(Arrays.toString(arr));
    }
}





/*-------------------------------------------outside user-defined package----------------------------------------------*/
import java.util.Scanner;

import mypackage.*;

public class impckg extends userdefined {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        userdefined obj = new userdefined();
        System.out.println("enter the size of the array: ");
        int n=sc.nextInt();
        int arr[]=new int[n];

        System.out.println("enter array elements: ");
        for(int i=0;i<n;i++){
            arr[i] = sc.nextInt();
        }
        System.out.println("before sorting: ");
        obj.print(arr);
        System.out.println("after sorting: ");
        obj.sort(arr,n);
        obj.print(arr);
        sc.close();
    }
}






/*-------------------------------------------------------------------------
Multi threading
3 threads and one generates a random integer
--------------------------------------------------------------------------*/

import java.util.*;

class A extends Thread
{
    public void run()
    {
        System.out.println("\nGenerating Five random numbers...");
        Random m=new Random();
        int num;
        for(int i=0;i<5;i++)
        {
            num=m.nextInt(10);
            System.out.println(num);
            try
            {if (num%2==0){
                B t2 = new B(num);
                t2.start();
            }
            else{
                C t3 = new C(num);
                t3.start();
            } 
                Thread.sleep(1000); 
            }
            catch(InterruptedException e)
            {
            }
        }
    }
}

class B extends Thread
{
    int n;
    B(int num)
    {
        n=num;
    }
    public void run()
    {
        System.out.println("Square of "+n+" is :"+(n*n));
    }
}

class C extends Thread
{
    int n;
    C(int num)
    {
        n=num;
    }
    public void run()
    {
        System.out.println("Cube of "+n+" is :"+(n*n*n));
    }
}
class Prgrm3BMultiThread {

    public static void main(String[] args) {
        A t1 = new A();
        t1.start();
        try{
            t1.join(); 
        }
        catch(InterruptedException e)
        {   
        }
    }

} 
    

